const defaults={addCSS:!0,thumbWidth:15,watch:!0,vertical:!1};function matches(e,t){return function(){return Array.from(document.querySelectorAll(t)).includes(this)}.call(e,t)}function trigger(e,t){if(e&&t){const n=new Event(t,{bubbles:!0});e.dispatchEvent(n)}}const getConstructor=e=>null!=e?e.constructor:null,instanceOf=(e,t)=>!!(e&&t&&e instanceof t),isNullOrUndefined=e=>null==e,isObject=e=>getConstructor(e)===Object,isNumber=e=>getConstructor(e)===Number&&!Number.isNaN(e),isString=e=>getConstructor(e)===String,isBoolean=e=>getConstructor(e)===Boolean,isFunction=e=>getConstructor(e)===Function,isArray=e=>Array.isArray(e),isNodeList=e=>instanceOf(e,NodeList),isElement=e=>instanceOf(e,Element),isEvent=e=>instanceOf(e,Event),isEmpty=e=>isNullOrUndefined(e)||(isString(e)||isArray(e)||isNodeList(e))&&!e.length||isObject(e)&&!Object.keys(e).length;var is={nullOrUndefined:isNullOrUndefined,object:isObject,number:isNumber,string:isString,boolean:isBoolean,function:isFunction,array:isArray,nodeList:isNodeList,element:isElement,event:isEvent,empty:isEmpty};function getDecimalPlaces(e){const t=`${e}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return t?Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0)):0}function round(e,t){if(1>t){const n=getDecimalPlaces(t);return parseFloat(e.toFixed(n))}return Math.round(e/t)*t}class RangeTouch{constructor(e,t){is.element(e)?this.element=e:is.string(e)&&(this.element=document.querySelector(e)),is.element(this.element)&&is.empty(this.element.rangeTouch)&&(this.config={...defaults,...t},this.init())}static get enabled(){return"ontouchstart"in document.documentElement}static setup(e){let t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},n=null;if(is.empty(e)||is.string(e)?n=Array.from(document.querySelectorAll(is.string(e)?e:'input[type="range"]')):is.element(e)?n=[e]:is.nodeList(e)?n=Array.from(e):is.array(e)&&(n=e.filter(is.element)),is.empty(n))return null;const i={...defaults,...t};if(is.string(e)&&i.watch){new MutationObserver((t=>{Array.from(t).forEach((t=>{Array.from(t.addedNodes).forEach((t=>{is.element(t)&&matches(t,e)&&new RangeTouch(t,i)}))}))})).observe(document.body,{childList:!0,subtree:!0})}return n.map((e=>new RangeTouch(e,t)))}init(){RangeTouch.enabled&&(this.config.addCSS&&(this.element.style.userSelect="none",this.element.style.webKitUserSelect="none",this.element.style.touchAction="manipulation"),this.listeners(!0),this.element.rangeTouch=this)}destroy(){RangeTouch.enabled&&(this.config.addCSS&&(this.element.style.userSelect="",this.element.style.webKitUserSelect="",this.element.style.touchAction=""),this.listeners(!1),this.element.rangeTouch=null)}listeners(e){const t=e?"addEventListener":"removeEventListener";["touchstart","touchmove","touchend"].forEach((e=>{this.element[t](e,(e=>this.set(e)),!1)}))}get(e){if(!RangeTouch.enabled||!is.event(e))return null;const t=e.target,n=e.changedTouches[0],i=parseFloat(t.getAttribute("min"))||0,s=parseFloat(t.getAttribute("max"))||100,r=parseFloat(t.getAttribute("step"))||1;let o;const l=t.getBoundingClientRect(),c=100/l.width*(this.config.thumbWidth/2)/100;return o=this.config.vertical?100-100/l.height*(n.clientY-l.top):100/l.width*(n.clientX-l.left),0>o?o=0:100<o&&(o=100),50>o?o-=(100-2*o)*c:50<o&&(o+=2*(o-50)*c),i+round(o/100*(s-i),r)}set(e){RangeTouch.enabled&&is.event(e)&&!e.target.disabled&&(e.preventDefault(),e.target.value=this.get(e),trigger(e.target,"touchend"===e.type?"change":"input"))}}export default RangeTouch;